/*  If you have not heard about that before, it represents an element that has received focus 
or contains an element that has received focus. So, for example, you have a <div> and inside 
of it is an input element. 
If you want to style that <div> when the contained input has focus, 
you can do it like so:
*/


@import url('https://fonts.googleapis.com/css2?family=Delius+Unicase&family=GFS+Didot&family=Zen+Maru+Gothic&display=swap');
 /* css rule:  font-family: 'GFS Didot', serif; */  
 /* css rule:  font-family: 'Delius Unicase', cursive; */ 
 /* css rule:  font-family: 'Zen Maru Gothic', sans-serif; */   

:root {
	--fontgen:'Zen Maru Gothic', sans-serif;
	--fontlogo:'Delius Unicase', cursive;
	--fontgrece:'GFS Didot', serif;
	--fontsizetitle: 3em;
	--fontsizesubtitle: 1.5em;
	--fontsizegeneral: 1.2em;
	--fontsizegeneralmed: 1em;
	--fontsizedetails: 0.8em;
	--bluedeep: #284177;
	--blue: #006BBD;
	--azur: #83CEEC;
	--azurlight: #DCF1F9;
	--beige: #EDE8E4;
	--deepbeige: #C2AFA8;
	--white: #ffffff;
	--black: #000000;
	--textshad1: 2px 4px 4px rgba(0,0,0,0.2),
                 0px -5px 10px rgba(255,255,255,0.15);
    --generalshad:rgba(0, 0, 0, 0.1) 0px 1px 3px 0px, rgba(0, 0, 0, 0.06) 0px 1px 2px 0px;
}


body {
	overflow-x: hidden;
	padding: 0px;
    margin: 0px;
	font-size: 16px;
	font-family: var(--fontgrece);
}

a {
	text-decoration: none;
	color: whitesmoke;

}

header {
	background-color: var(--beige) ;
	display: flex;
	justify-content:center;
	align-items: center;
	max-height: 10%;
}

nav {
	max-width: 100%;
	background-color: var(--beige);
	display: flex;
	justify-content: space-around;
	max-height: 100%;
}

#headerlogo {
	font-family: 'Delius Unicase', cursive;
	color: var(--white);
	font-size: 2.5em;
}

.flexmenu {
	display: flex;
	flex-direction: column ;
}

.menu1, .menu2  {
	background-color: var(--beige);
	display: none;
	position: absolute;
}


.menulabel:hover .menu1, .menulabel2:hover .menu2 {
	background-color: var(--deepbeige);
	display: block;
	position: relative;
	z-index: 2;
}


/* personal main grece */

#maingrece h3 {
	padding: 2vh;

}

.mainpicgrece {
	background-image: url("../pics/grecemain.jpg");
	background-size: cover;
	background-repeat: no-repeat;

}

.titlesonpic {
	background-image: url("../pics/grecemain.jpg");
	background-size: cover;
	background-repeat: no-repeat;
	max-width: 100%;
	height: 70vh;
	display: flex;
	justify-content: flex-end;
	align-items: center;


}

.titlesonpic h1 {
		background-color: rgba(0, 0, 0, .3) ;
		padding: 10vh;
		font-weight: 400;
		font-size: var(--fontsizetitle);
		font-family: var(--fontgrece);
		color: var(--white);
		text-shadow: var(--textshad);
}

.linksonpics {
		background-color: rgba(0, 0, 0, .3) ;
		max-width: 100%;
		display: flex;
		justify-content: space-evenly;
		padding: 3vh;
		font-family: var(--fontgen);
		font-size: var(--fontsizesubtitle);
}

.linksonpics a {
	padding: 4vh;


}

.linksonpics a:hover {
		background-color: rgba(0, 0, 0, .3);
		padding: 4vh;
		transition: 0.2s;

}

.details {
	color: var(--azur);
	text-shadow: var(--textshad);
	font-size: var(--fontsizedetails);
}

/* articles */

[class^="articlewrapperdiv"] {			/* ce trick m'aide pas mal pour les truc ripetitifs ( en fait quand je l'ai decouvert ç' etait un'epiphanie! ) */
	display: flex;
}

[id^="articlex"] p {
	font-family: var(--fontgen);
	font-size: var(--fontsizegeneral);
}	

[id^="articlex"] h1 {
	font-family: var(--fontgen);
	font-size: var(--fontsizesubtitle);
	background-color: var(--azur);
	color: var(--white);

}	

[id^="articlex"] h1:hover {
    transition: 1s;
    left: 0;
}

[id^="articlex"] h2 {
	font-family: var(--fontgen);
	font-size: var(--fontsizegeneral);
}	


[id^="articlex"] {
	padding: 10vh;
	display: flex;
	flex-direction: column;
}

[id^="articlex"] img {
	width: 90vh;
}

[id^="articlex"] img:hover {
		box-shadow: var(--generalshad);
}

/* buger le text et images dans les article */

[class$="imgflex"] {
	display: flex;
}

[class$="imgflex"] p {
	padding: 5vh;
}

[id$="xsub"] {
	padding: 2vh;
}


/* asides */


[id$="ax"] img { 
		width: 50vh;
}

[id$="ax"] p:hover {
	text-decoration-line: underline;
	color: var(--blue);
}

[id$="ax"] {
	padding: 10vh;
}

[id$="ax"] a {
	padding: 10vh;
	font-family: var(--fontgen);
	font-size: var(--fontsizegeneral);
	color: var(--black);
}

#atheneax {
	float: left;
}

/* cards */

.cardsection {
	padding: 10vh;
	display: flex;
	align-items: center;
	flex-direction: column;
}


.cardsection h2 {
	padding: 2vh;
	font-family: var(--fontgen);
	font-size: var(--fontsizegeneralmed);
	background-color: var(--white);
	color: var(--black);
	text-shadow: var(--textshad);
	box-shadow: var(--generalshad);
}

.bkgcards h1 {
	background-color: var(--black);
	color: var(--white);
	padding: 2vh;
	width: 90vh;
}

.bkgcards tr td {
	padding: 5vh;
}

.bkgcards tr td:hover {
	background-color: var(--azurlight) ;
}
 
.bkgcards a {
	color: black;
}

.bkgcards a span {
	font-family: var(--fontgrece);
	color: var(--black);
	background-color: var(--white);
	padding: 2vh;
	border: solid  0.1vh var(--azur);
	box-shadow: var(--generalshad);
}

.bkgcards a span:hover {
	font-family: var(--fontgrece);
	color: var(--white);
	background-color: var(--black);
	padding: 2vh;
	border: solid  0.1vh var(--azur);
	transition: 0.2s;
	box-shadow: var(--generalshad);
}

[id^="wrapmodal"] {	
	display: none;
}

																				/*  ici [id^="wrapmodal"]:target ne marche pas, je ne suis pas sur mais
																					je crois que c'est liée au fait que il y à deja des id 'wrapmodalform'
																					donc je douvrais au moins ajouter une 'x' (ea wrapmodal-x-num ). 
																					J'aurais voulu trouver une fonction pour le faire sans besoin de
																					devoir tout changer et j'ai recherché sur les pseudo-elements ::before
																					::after avec l'utilisation de 'content mais ils sont pas destiné a 
																					l ajout de un partie interne au css.

																				*/
																	
#wrapmodal:target, #wrapmodal2:target, #wrapmodal3:target, #wrapmodal4:target,
#wrapmodal5:target, #wrapmodal6:target {
	width: 100%;
	display: block;
	background-color: var(--beige);
	color: var(--white);
}


.cardimgcrop {
	width: 45vh;
	height: 30vh;
	overflow: hidden;
	margin: 0;
}

.cardimgcrop img {
	width: 55vh;
}

.card {
	display: flex;
	flex-direction: column;
	align-items: center;
	background-color: var(--beige);
	padding: 0vh;
	border-radius: 2vh;
	box-shadow: var(--generalshad);

}

/* modalcards */

#setdate #setdate1 #setdate2 #setdate3 #setdate4 #setdate5  {
	font-family: var(--fontgen);
}

[id^="setdatex"]  {						
	font-family: var(--fontgen);
}

[id^="numpeople"] {
	border: 0px;
	font-family: var(--fontgen);
	background-color: var(--bluedeep);
	color: var(--white);
	border-radius: 2vh;
}

.clsbtn {
	background-color: var(--bluedeep);
	color: var(--white);
}

.modalexpe {
	font-family: var(--fontgen);
	padding: 15vh;
	background-color: var(--white);
	color: var(--black);
}

.modalexpe span {
	font-size: var(--fontsizedetails);

}

[id^="reservebtn"] {
	color:  var(--white);
	background-color: var(--bluedeep);
	border-radius: 2vh;
	margin-left: 4vh;
	cursor: pointer;
}


#reserve1, #reserve2, #reserve3, #reserve4, #reserve5, #reserve6 {
	display: none;
	font-size: var(--fontsizegeneral);
}

[id^="reserve"]:checked   
~ [id^="reserveform"]
						{
	display: none;
}

[id^="reserveform"] {	
	display: block;
	color: var(--white);
	background-color: var(--bluedeep);
	z-index: 3;
}

[id^="reserveform"] form {
	display: block;
	color: var(--white);
	background-color: var(--bluedeep);
	z-index: 3;
}

